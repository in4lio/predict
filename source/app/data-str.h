
/*  data-str.h was generated by yup.py (yupp) 1.0b6
    out of data-str.yu-h 
 *//**
 *  \file  data-str.h (data-str.yu-h)
 *  \brief  String converting.
 *  \author  Vitaly Kravtsov (in4lio@gmail.com)
 *  \copyright  See the LICENSE file.
 */

#define LOGGING
#define LINK_CONSOLE

#define LINK_UT

#define LINK_UT_UT
#define LINK_UT_CORO
#define LINK_UT_DATA

#ifndef DATA_STR_H
#define DATA_STR_H

#ifdef  DATA_STR_IMPLEMENT
#define DATA_STR_EXT
#define DATA_STR_EXT_INIT( dec, init ) \
	dec = init
#define DATA_STR_EXT_C
#define DATA_STR_EXT_C_INIT( dec, init ) \
	dec = init
#define DATA_STR_INL
#else
#define DATA_STR_EXT extern
#define DATA_STR_EXT_INIT( dec, init ) \
	extern dec
#ifdef __cplusplus
#define DATA_STR_C "C"
#else
#define DATA_STR_C
#endif
#define DATA_STR_EXT_C extern DATA_STR_C
#define DATA_STR_EXT_C_INIT( dec, init ) \
	extern DATA_STR_C dec
#if __GNUC__ && !__GNUC_STDC_INLINE__
#define DATA_STR_INL extern inline
#else
#define DATA_STR_INL inline
#endif
#endif

#ifndef COMMA
#define COMMA ,
#endif

/**
 *  \addtogroup data
 *  \{
 */

#define __strtol( s, end )    strtol( s, end, 0 )
#define __strtoul( s, end )   strtoul( s, end, 0 )
#define __strtoll( s, end )   strtoll( s, end, 0 )
#define __strtoull( s, end )  strtoull( s, end, 0 )
#define __strtof( s, end )    (( float ) strtod( s, end ))

/**
 *  \brief byte-to-hex converting.
 *  \param s String buffer.
 *  \param val Value.
 *  \return String.
 */
DATA_STR_EXT_C char *string_byte_h( char *s, byte val );

/**
 *  \brief word-to-hex converting.
 *  \param s String buffer.
 *  \param val Value.
 *  \return String.
 */
DATA_STR_EXT_C char *string_word_h( char *s, word val );

/**
 *  \brief dword-to-hex converting.
 *  \param s String buffer.
 *  \param val Value.
 *  \return String.
 */
DATA_STR_EXT_C char *string_dword_h( char *s, dword val );

/** \} */

#undef DATA_STR_EXT
#undef DATA_STR_EXT_INIT
#undef DATA_STR_EXT_C
#undef DATA_STR_EXT_C_INIT
#undef DATA_STR_INL
#undef DATA_STR_C
#endif

