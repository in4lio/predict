
/*  data-str.h was generated by yup.py (yupp) 1.0c2
    out of data-str.yu-h 
 *//**
 *  \file  data-str.h (data-str.yu-h)
 *  \brief  String converting.
 *  \author  Vitaly Kravtsov (in4lio@gmail.com)
 *  \copyright  See the LICENSE file.
 */

#define LOGGING
#define LINK_CONSOLE

#define LINK_UT

#define LINK_UT_UT
#define LINK_UT_CORO
#define LINK_UT_DATA

#ifndef DATA_STR_H
#define DATA_STR_H

#ifdef  DATA_STR_IMPLEMENT
#define DATA_STR_EXT
#define DATA_STR_INIT( ... ) \
	= __VA_ARGS__

#ifdef __cplusplus
#define DATA_STR_EXT_C \
	extern "C"
#else
#define DATA_STR_EXT_C \
	extern
#endif

#define DATA_STR_VAR( decl ) \
	decl
#define DATA_STR_VAR_INIT( decl, ... ) \
	decl = __VA_ARGS__

#ifdef __cplusplus
#define DATA_STR_VAR_C( decl ) \
	extern "C" decl; decl
#define DATA_STR_VAR_C_INIT( decl, ... ) \
	extern "C" decl; decl = __VA_ARGS__
#else
#define DATA_STR_VAR_C( decl ) \
	decl
#define DATA_STR_VAR_C_INIT( decl, ... ) \
	decl = __VA_ARGS__
#endif

#define DATA_STR_INL

#else  /* DATA_STR_IMPLEMENT */
#define DATA_STR_EXT \
	extern
#define DATA_STR_INIT( ... )

#ifdef __cplusplus
#define DATA_STR_EXT_C \
	extern "C"
#else
#define DATA_STR_EXT_C \
	extern
#endif

#define DATA_STR_VAR( decl ) \
	extern decl
#define DATA_STR_VAR_INIT( decl, ... ) \
	extern decl

#ifdef __cplusplus
#define DATA_STR_VAR_C( decl ) \
	extern "C" decl
#define DATA_STR_VAR_C_INIT( decl, ... ) \
	extern "C" decl
#else
#define DATA_STR_VAR_C( decl ) \
	extern decl
#define DATA_STR_VAR_C_INIT( decl, ... ) \
	extern decl
#endif

#if __GNUC__ && !__GNUC_STDC_INLINE__
#define DATA_STR_INL \
	extern inline
#else
#define DATA_STR_INL \
	inline
#endif

#endif /* DATA_STR_IMPLEMENT */

/**
 *  \addtogroup data
 *  \{
 */

#define __strtol( s, end )    strtol( s, end, 0 )
#define __strtoul( s, end )   strtoul( s, end, 0 )
#define __strtoll( s, end )   strtoll( s, end, 0 )
#define __strtoull( s, end )  strtoull( s, end, 0 )
#define __strtof( s, end )    (( float ) strtod( s, end ))

/**
 *  \brief byte-to-hex converting.
 *  \param s String buffer.
 *  \param val Value.
 *  \return String.
 */
DATA_STR_EXT_C char *string_byte_h( char *s, byte val );

/**
 *  \brief word-to-hex converting.
 *  \param s String buffer.
 *  \param val Value.
 *  \return String.
 */
DATA_STR_EXT_C char *string_word_h( char *s, word val );

/**
 *  \brief dword-to-hex converting.
 *  \param s String buffer.
 *  \param val Value.
 *  \return String.
 */
DATA_STR_EXT_C char *string_dword_h( char *s, dword val );

/** \} */

#undef DATA_STR_EXT
#undef DATA_STR_INIT
#undef DATA_STR_EXT_C
#undef DATA_STR_VAR
#undef DATA_STR_VAR_INIT
#undef DATA_STR_VAR_C
#undef DATA_STR_VAR_C_INIT
#undef DATA_STR_INL
#endif

