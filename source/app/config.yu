($!                _ _     _
     ___ ___ ___ _| |_|___| |_
    |   |  _   _|   | |  _   _|
    |  _|_| |___ ___|_|___  |
    |_|                   |_)

($!
 * * * * * * * * * * * * * * * * * * * * * * * * *
 *                                               *
 *             A P P L I C A T I O N             *
 *                                               *
 * * * * * * * * * * * * * * * * * * * * * * * * * )


($!
 * * * * * * * * * * * * * * * * * * * * * * * * *
 *                                               *
 *             D E B U G   T O O L S             *
 *                                               *
 * * * * * * * * * * * * * * * * * * * * * * * * * )

($def LOGGING)
($def LINK_CONSOLE)

($!
 * * * * * * * * * * * * * * * * * * * * * * * * *
 *                                               *
 *              U N I T   T E S T S              *
 *                                               *
 * * * * * * * * * * * * * * * * * * * * * * * * * )

($def LINK_UT)

($def-if LINK_UT LINK_UT_UT)
($def-if LINK_UT LINK_UT_CORO)
($def-if LINK_UT LINK_UT_DATA)

($!
 * * * * * * * * * * * * * * * * * * * * * * * * *
 *                                               *
 *               F R A M E W O R K               *
 *                                               *
 * * * * * * * * * * * * * * * * * * * * * * * * * )

($!
	($set corolib-use-c-macro 0) to generate a direct C source code for coroutines,
	($set corolib-use-c-macro 1) to generate a source code based on macro definitions from "coroutine.h".
)
($set corolib-use-c-macro 0)

($!
	($set hlib-light 0) to use full version of storage classes macros,
	($set hlib-light 1) to use light version of storage classes macros.
)
($set hlib-light 0)

($!
	Don't finish the program even in case all coroutines were completed.
)
($set predict-alive-coro-completed 1)

($!
	Pause before unit testing of 2nd stage (seconds).
)
($set predict-ut_2-pause 1)

($!
	Use ftoa() instead of string format for floating numbers (%f).
)
($set predict-use-ftoa 0)
